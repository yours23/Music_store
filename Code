CODE
 Q1: Who is the senior most employee based on job title? */
select * from employee
order by levels desc limit 1;

/* Q2: Which countries have the most Invoices? */
select billing_country,count(customer_id) as c 
	from invoice group by billing_country order by c desc limit 5;

/* Q3: What are top 3 values of total invoice? */
select* from invoice;
select invoice_id,sum(total) as sum 
	from invoice group by invoice_id order by sum desc limit 3;

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */
select billing_city as city, sum(total) as sum_of_all_invoices 
	from invoice group by billing_city order by sum_of_all_invoices desc limit 1;

 /*Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/
select customer.customer_id,customer.first_name,customer.last_name,
	 customer.email,sum(invoice.total) as total from customer join invoice
	 on customer.customer_id= invoice.customer_id group by customer.customer_id
	 order by  total desc limit 1;

/* Q6: Write query to return the email, first name, last name, 
& Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */
select distinct customer.first_name,  customer.last_name,  customer.email,customer.customer_id from 
	customer join invoice on customer.customer_id= invoice.customer_id join invoice_line
	on invoice.invoice_id=invoice_line.invoice_id join track 
	on invoice_line.track_id=track.track_id join genre on track.genre_id=genre.genre_id where
	genre.name like 'Rock' group by  customer.first_name, customer.last_name,customer.email, 
    customer.customer_id  order by email;

/* Q7: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

	select distinct artist.artist_id,artist.name,count(track.track_id) as no_of_total_tracks
		from artist join album on artist.artist_id=album.artist_id 
		join track on album.album_id=track.album_id join genre on 
		track.genre_id=genre.genre_id where genre.name like 'Rock' 
		group by artist.name, artist.artist_id order by no_of_total_tracks desc limit 10;

/* Q8: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track.
Order by the song length with the longest songs listed first. */

select distinct track.name,track.milliseconds as time
	from track where track.milliseconds>(select avg(track.milliseconds) from track) 
	group by  track.name,track.milliseconds order by time desc;


/* Q9: Find how much amount spent by each customer on artists? 
Write a query to return customer name, artist name and total spent */

with best_selling_artist as (select artist.artist_id,artist.name as name,
	sum(invoice_line.quantity * invoice_line.unit_price)
	as total from invoice_line join track on
	invoice_line.track_id=track.track_id join album on track.album_id
	=album.album_id join artist on album.artist_id=artist.artist_id group by 
	artist.artist_id  order by total desc)

select customer.customer_id,customer.first_name,customer.last_name,	
 best_selling_artist.name,sum(invoice_line.quantity*invoice_line.unit_price) as sum
	from customer join invoice on customer.customer_id=invoice.customer_id
join invoice_line on invoice.invoice_id=invoice_line.invoice_id join track on track.track_id
	=invoice_line.track_id join album on album.album_id =track.album_id join
	best_selling_artist on album.artist_id =best_selling_artist.artist_id
	group by	customer.customer_id,customer.first_name,customer.last_name,
	best_selling_artist.name 
	order by sum desc ;




/* Q8: We want to find out the most popular music Genre for each country.
We determine the most popular genre as the genre  with the highest amount of purchases. 
Write a query that returns each country  along with the top Genre. 
For countries where the maximum number of purchases is shared return all Genres. */



With most_popular_genre as (select customer.country,
	count(invoice.invoice_id)
	as count,genre.name, row_number() over(partition by  customer.country
	order by
	count(invoice.invoice_id) desc)
	from invoice join
	customer on invoice.customer_id
	=customer.customer_id
	join invoice_line on invoice.invoice_id= invoice_line.invoice_id
	join track on invoice_line.track_id =track.track_id join genre on track.genre_id
	=genre.genre_id group by customer.country,genre.name order by 
	customer.country asc, count desc)
select*from most_popular_genre where row_number<=1;


/*Q9: Write a query that determines the customer that has spent the most
	 on music for each country. Write a query that returns the country along 
	 with the top customer and how much they spent.For countries where the 
	 top amount spent is shared, provide all customers who spent this amount. */
with best_customer as (select customer.first_name,customer.last_name,customer.country,
	customer.customer_id, sum( invoice_line.unit_price*invoice_line.quantity) as total_spent,
	row_number() over(partition by customer.country order 
	by sum( invoice_line.unit_price*invoice_line.quantity) desc)from
	customer join invoice on customer.customer_id=invoice.customer_id
	join invoice_line on invoice.invoice_id=invoice_line.invoice_id
	group by customer.first_name,customer.last_name,customer.country,
	customer.customer_id order by customer.country asc,row_number asc
	)
select*from best_customer  where row_number<=1 ;
